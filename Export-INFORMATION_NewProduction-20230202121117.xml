<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for Windows (x86-64) 2022.1 (Build 209U)" ts="2023-02-02 12:11:57">
<Project name="EnsExportProduction_2023-02-02 12-11-17_366+0" LastModified="2023-02-02 12:11:57.6270965">
  <ProjectDescription>Studio Project generated from Production 'INFORMATION.NewProduction' at 2023-02-02 12:11:17.366 UTC</ProjectDescription>
  <Items>
    <ProjectItem name="INFORMATION.NewProduction" type="CLS"></ProjectItem>
    <ProjectItem name="NCA.ConceptMapsTranslate" type="CLS"></ProjectItem>
    <ProjectItem name="NCA.HL7Dumper" type="CLS"></ProjectItem>
    <ProjectItem name="NCA.HTTPOut" type="CLS"></ProjectItem>
    <ProjectItem name="EnsExportNotes.EnsExportProduction_2023-02-02 12-11-17_366+0.PTD" type="PTD"></ProjectItem>
  </Items>
</Project>


<Class name="INFORMATION.NewProduction">
<Super>Ens.Production</Super>
<TimeChanged>66507,43865.4099768</TimeChanged>
<TimeCreated>66399,44718.3499753</TimeCreated>

<XData name="ProductionDefinition">
<Data><![CDATA[
<Production Name="INFORMATION.NewProduction" LogGeneralTraceEvents="false">
  <Description></Description>
  <ActorPoolSize>2</ActorPoolSize>
  <Item Name="MsgRouter" Category="" ClassName="EnsLib.HL7.MsgRouter.RoutingEngine" PoolSize="1" Enabled="false" Foreground="false" Comment="Cela permet de gÃ©rer la logique de routage." LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="Validation"></Setting>
    <Setting Target="Host" Name="BusinessRuleName">INFORMATION.NewProduction.RoutingRule</Setting>
    <Setting Target="Host" Name="BadMessageHandler">BadMessageHandler</Setting>
  </Item>
  <Item Name="BadMessageHandler" Category="" ClassName="EnsLib.HL7.Operation.FileOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="Bad messages are sent to this operation." LogTraceEvents="false" Schedule="">
  </Item>
  <Item Name="Ens.Alert" Category="" ClassName="EnsLib.MsgRouter.RoutingEngine" PoolSize="0" Enabled="true" Foreground="false" Comment="This handles Alert routing logic." LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="BusinessRuleName">INFORMATION.NewProduction.AlertRule</Setting>
  </Item>
  <Item Name="EMailAlert" Category="" ClassName="EnsLib.EMail.AlertOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="This sends alerts via e-mail." LogTraceEvents="false" Schedule="">
  </Item>
  <Item Name="PagerAlert" Category="" ClassName="EnsLib.EMail.AlertOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="This sends alerts to a pager via e-mail." LogTraceEvents="false" Schedule="">
  </Item>
  <Item Name="HL7FileService" Category="" ClassName="EnsLib.HL7.Service.FileService" PoolSize="1" Enabled="false" Foreground="false" Comment="This is a default HL7 File Service." LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="TargetConfigNames">MsgRouter</Setting>
  </Item>
  <Item Name="HL7FileOperation" Category="" ClassName="EnsLib.HL7.Operation.FileOperation" PoolSize="1" Enabled="false" Foreground="false" Comment="This is a default HL7 File Operation." LogTraceEvents="false" Schedule="">
  </Item>
  <Item Name="HL7TOFHIR" Category="" ClassName="NCA.Hl7toFhir" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
  </Item>
  <Item Name="HL7HTTP" Category="" ClassName="EnsLib.HL7.Service.HTTPService" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Adapter" Name="Port">9980</Setting>
    <Setting Target="Host" Name="TargetConfigNames">BundleMaker</Setting>
    <Setting Target="Host" Name="MessageSchemaCategory">2.4</Setting>
  </Item>
  <Item Name="HL7TOFHIRV2" Category="" ClassName="NCA.FhirBuilder" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Host" Name="AlertOnError">1</Setting>
  </Item>
  <Item Name="NCAOps" Category="" ClassName="NCA.HTTPOut" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Adapter" Name="HTTPPort"></Setting>
    <Setting Target="Adapter" Name="HTTPServer"></Setting>
    <Setting Target="Adapter" Name="URL"></Setting>
    <Setting Target="Adapter" Name="SSLConfig"></Setting>
    <Setting Target="Adapter" Name="RegistryID"></Setting>
    <Setting Target="Adapter" Name="SSLCheckServerIdentity">0</Setting>
  </Item>
  <Item Name="ConceptMaps" Category="" ClassName="NCA.ConceptMapsTranslate" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Adapter" Name="HTTPPort">443</Setting>
    <Setting Target="Adapter" Name="HTTPServer">https://fhir.simplifier.net/NCA-TESTS/$translate?</Setting>
    <Setting Target="Adapter" Name="URL"></Setting>
    <Setting Target="Adapter" Name="SSLCheckServerIdentity">0</Setting>
  </Item>
  <Item Name="HL7HTTP_Custom" Category="" ClassName="EnsLib.HL7.Service.HTTPService" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
    <Setting Target="Adapter" Name="Port">9985</Setting>
    <Setting Target="Host" Name="TargetConfigNames">HL7TOFHIRV2</Setting>
    <Setting Target="Host" Name="MessageSchemaCategory">MySchema_2.4</Setting>
  </Item>
  <Item Name="BundleMaker" Category="" ClassName="NCA.HL7Dumper" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="true" Schedule="">
  </Item>
</Production>
]]></Data>
</XData>
</Class>


<Class name="NCA.ConceptMapsTranslate">
<Super>Ens.BusinessOperation</Super>
<TimeChanged>66463,54193.354911</TimeChanged>
<TimeCreated>66456,59538.7505816</TimeCreated>

<Parameter name="ADAPTER">
<Default>EnsLib.HTTP.OutboundAdapter</Default>
</Parameter>

<Property name="Adapter">
<Type>EnsLib.HTTP.OutboundAdapter</Type>
</Property>

<Parameter name="INVOCATION">
<Default>Queue</Default>
</Parameter>

<Method name="SendFHIR">
<FormalSpec>strmCont:Ens.StreamContainer,*pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    
    Set tsc = $$$OK
    Set tHTTPReq=##class(%Net.HttpRequest).%New()
	set strm = strmCont.Stream
    
	;DO tHTTPReq.SetHeader("Content-Type","application/json")

	Set URL = ..Adapter.HTTPServer_"/"_..Adapter.URL
    $$$TRACE("URL: "_URL)
   ;do tHTTPReq.SetParam("system", strm.system)
   ;do tHTTPReq.SetParam("code", strm.code)
   ;do tHTTPReq.SetParam("source", strm.source)
   ;do tHTTPReq.SetParam("target", strm.target)
   ;do tHTTPReq.SetParam("_format", "json")

  /*
   $$$TRACE(strm.system)
   $$$TRACE(strm.code)
   $$$TRACE(strm.source)
   $$$TRACE(strm.target)
   */
    
    do tHTTPReq.SetParam("system", "http://hl7.org/fhir/address-use")
    do tHTTPReq.SetParam("code", "home")
    do tHTTPReq.SetParam("source", "http://hl7.org/fhir/ValueSet/address-use")
    do tHTTPReq.SetParam("target", "http://terminology.hl7.org/ValueSet/v3-AddressUse")
    do tHTTPReq.SetParam("_format", "json")
    
	SET tsc=..Adapter.SendFormDataArray(.tHttpResponse, "POST", tHTTPReq)
	
	#DIM tHttpResponse As %Net.HttpResponse
	
	set response=##class(NCA.HttpResponse).%New()

	;set response.StatusCode= tHttpResponse.StatusCode
	set response.ResponseBody=tHttpResponse.Data.Read()

    $$$TRACE(tHttpResponse.Data.Read())
	
	set pResponse=response

    quit tsc
]]></Implementation>
</Method>

<XData name="MessageMap">
<Data><![CDATA[
<MapItems>
<MapItem MessageType="Ens.StreamContainer">
<Method>SendFHIR</Method>
</MapItem>
</MapItems>
]]></Data>
</XData>
</Class>


<Class name="NCA.HL7Dumper">
<ClassType>persistent</ClassType>
<Super>Ens.BusinessProcess</Super>
<TimeChanged>66507,43080.8139178</TimeChanged>
<TimeCreated>66506,35135.2111567</TimeCreated>

<Method name="OnRequest">
<FormalSpec>pRequest:EnsLib.HL7.Message,*pResponse:Ens.Response</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tsc = $$$OK
	// Dump HL7 content into an array
	do ..HL7Dumping(pRequest, .pArr)

	// Haitem El Aaouani 01/02/2023: Extract Message type / trigger event to monitor bundles
	Set TrigEvent = pRequest.GetValueAt("MSH:9.2")
	$$$TRACE("TrigEvent: "_TrigEvent)

	set BundleArray = ##class(%DynamicArray).%New()

	// Demographic bundle
	if TrigEvent = "A31" {
		Set BundleResources = $LISTBUILD("PatientResource", "GPPractitionerRoleResource", "ConsentResource",
									"OrganizationResource", "OrganizationResource", "PractitionerResource")
	}
	// Enconter bundle 
	Elseif $LISTBUILD("A01", "A02", "A03") [ TrigEvent {
		Set BundleResources = $LISTBUILD("PractitionerRoleResource", "PractitionerResource", "LocationResource",
									"EncounterResource", "EpisodeOfCareResource")
	}
	Else {
		quit $$$ERROR(5001,"unmanaged message type")
	}

	// Build the bundle and send to operation
	do ##Class(NCA.Resources).BundleBuilder(pArr, BundleResources, .BundleResource) // Bundle
	$$$TRACE("BundleResource.%ToJSON(): "_BundleResource.%ToJSON())
	set strmCont=##class(Ens.StreamContainer).%New()
	set strm = ##class(%Stream.GblChrCompress).%New()
	set formatter = ##class(%JSON.Formatter).%New()
	set Inputstring = BundleResource.%ToJSON()
	do formatter.FormatToStream(Inputstring, .strm)
	set strmCont.Stream=strm

	Set tsc=..SendRequestSync("NCAOps",strmCont)

	// Concept Map test
	set tsc = ##class(NCA.Resources).ConceptMapParams(.StremToConceptMap) // ConsentRequest
	Set tsc=..SendRequestSync("ConceptMaps", StremToConceptMap)

	quit tsc
]]></Implementation>
</Method>

<Method name="HL7Dumping">
<FormalSpec>pRequest:Ens.Request,*pArr:%ArrayOfDataTypes</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tsc = $$$OK

	Set nhsNumber = ""
	Set LocalCode =  ""
	set pArr=##class(%ArrayOfDataTypes).%New()
	Set relationshipLKUP = "NCA.RelationShipCodes"
	Set genderLKUP = "NCA.GenderCode"
	Set ethnicityLKUP = "NCA.Ethnicity"

	// NHS Number / Local Code / OdsCode
	Set Count=pRequest.GetValueAt("PID:3(*)")
	For i=1:1:Count
	{	
		If (pRequest.GetValueAt("PID:3("_i_").5")="NHS")
		   	{
			   	Set nhsNumber=pRequest.GetValueAt("PID:3("_i_").1")
			   	Set nhsAssigner=pRequest.GetValueAt("PID:3("_i_").4")
		   	}
		If (pRequest.GetValueAt("PID:3("_i_").5")="DN")
		   	{
			   	Set LocalCode=pRequest.GetValueAt("PID:3("_i_").1")
			   	Set CodeAssigner=pRequest.GetValueAt("PID:3("_i_").4")
		   	}
	}

	if nhsNumber="" && LocalCode=""
	{
		quit $$$ERROR(5001,"The patient's NHS Number and Local code are missing within the Inbound HL7 message.")
	}

	do pArr.SetAt(nhsNumber, "NhsNumberContent.value")
	do pArr.SetAt(nhsAssigner, "NhsNumberAssigner")
	do pArr.SetAt(LocalCode, "LocalCode")
	do pArr.SetAt(CodeAssigner, "LocalCodeAssigner")
	do pArr.SetAt(pRequest.GetValueAt("PID:5.5"), "prefixContent")
	do pArr.SetAt(pRequest.GetValueAt("PID:5.1"), "nameContent.family")
	do pArr.SetAt(pRequest.GetValueAt("PID:5.2"), "givenNameContent.given")

	// Gender LookUp:
	Set GenderCode = ##class(Ens.Util.FunctionSet).Lookup(genderLKUP, pRequest.GetValueAt("PID:8"), "$D", "$DE")
	do pArr.SetAt(GenderCode, "resource.gender")

	// Date of birth
	do pArr.SetAt($ZDT($ZDATEH(pRequest.GetValueAt("PID:7.1"),5),3), "resource.birthDate")

	 // Ethnicity
	Set EthinicityCode = ##class(Ens.Util.FunctionSet).Lookup(ethnicityLKUP, pRequest.GetValueAt("PID:22.1"), "$D", "$DE")
	do pArr.SetAt(EthinicityCode, "ethnicCategory.value")
	$$$TRACE("EthinicityCode: "_EthinicityCode_"//"_pRequest.GetValueAt("PID:22.1"))

	do pArr.SetAt(pRequest.GetValueAt("PID:17"), "religion.value") // Religion
	do pArr.SetAt(pRequest.GetValueAt("PID:28"), "Nationality.value") // Nationality
	
    // BirthPlace
    do pArr.SetAt(pRequest.GetValueAt("PID:23"), "birthPlaceValueAddress.text")

	// Patient address
	do pArr.SetAt(pRequest.GetValueAt("PID:11.1"), "addressLines1")
	do pArr.SetAt(pRequest.GetValueAt("PID:11.2"), "addressLines2")
	do pArr.SetAt(pRequest.GetValueAt("PID:11.3"), "addressCity")
	do pArr.SetAt( pRequest.GetValueAt("PID:11.5"), "addressPostCode")

	// Deceased patient
	if pRequest.GetValueAt("PID:29") '= ""
	{
		set deceaseDay = $EXTRACT(pRequest.GetValueAt("PID:29"), 1, 8)
		set deceaseTime = $EXTRACT(pRequest.GetValueAt("PID:29"), 9, 10)_":"_$EXTRACT(pRequest.GetValueAt("PID:29"), 11, 12)_":"
		set deceaseTime = deceaseTime_$EXTRACT(pRequest.GetValueAt("PID:29"), 13, 17)_":"_$EXTRACT(pRequest.GetValueAt("PID:29"), 18, 19)

		do pArr.SetAt($ZDT($ZDATEH(deceaseDay,5),3)_"T"_deceaseTime, "resource.deceasedDateTime")
	}
	
	do pArr.SetAt(pRequest.GetValueAt("PID:11.1"), "addressLinesContent")
	do pArr.SetAt(pRequest.GetValueAt("PID:11.3"), "addressContent.city")
	do pArr.SetAt(pRequest.GetValueAt("PID:11.5"), "addressContent.postalCode")
	do pArr.SetAt(pRequest.GetValueAt("PID:13.1"), "phoneContent.value")
	do pArr.SetAt(pRequest.GetValueAt("PID:13.4"), "emailContent.value")

	// Next of Kin
	Set Cnt=pRequest.GetValueAt("NK1(*)")
	For j=1:1:Cnt
	{
		Set RelationShipCode = ##class(Ens.Util.FunctionSet).Lookup(relationshipLKUP, pRequest.GetValueAt("NK1("_j_"):3.1"), "$D", "$DE")
		do pArr.SetAt(RelationShipCode, "relationshipCodingCode.code"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):2.5"), "ContactprefixContent"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):2.2"), "ContactgivenNameContent.given"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):2.1"), "ContactnameContent.family"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):5"), "ContactphoneContent.value"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):6"), "ContactphoneBusinessContent.value"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):4.1"), "ContactAddressLinesContent"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):4.2"), "ContactAddressLinesOtherContent"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):4.3"), "ContactAddressLinesCityContent"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):4.4"), "ContactAddressLinesStateContent"_j)
		do pArr.SetAt(pRequest.GetValueAt("NK1("_j_"):4.5"), "ContactAddressContent.postalCode"_j)
	}

	// Practitioner
	do pArr.SetAt(pRequest.GetValueAt("PD1:4.10"), "PASLocal")
	do pArr.SetAt(pRequest.GetValueAt("PD1:4.1"), "NationalCode")
	do pArr.SetAt(pRequest.GetValueAt("PD1:4.2"), "GPFamilyName")
	do pArr.SetAt(pRequest.GetValueAt("PD1:4.3"), "GPGivenName")
	do pArr.SetAt(pRequest.GetValueAt("PD1:4.6"), "GPPrefix")
	
	// Organization
	;do pArr.SetAt(pRequest.GetValueAt("PD1:3.3"), "odsOrganisationCode") //PD1:3.3 is for practitioner or Organization?
	;do pArr.SetAt(pRequest.GetValueAt("PD1:3.1"), "OrganisationName")

	do pArr.SetAt(pRequest.GetValueAt("PID:3.4"), "odsOrganisationCode") //PD1:3.3 is for practitioner or Organization?
	do pArr.SetAt(pRequest.GetValueAt("PID:3.1"), "OrganisationName")

	// ServiceRequest
	do pArr.SetAt(pRequest.GetValueAt("RF1:2"), "SRstatus")
	do pArr.SetAt(pRequest.GetValueAt("RF1:10"), "SRcategoryText")

    // Location
	do pArr.SetAt(pRequest.GetValueAt("PV1:3.1"), "LocationCode")
	do pArr.SetAt(pRequest.GetValueAt("PV1:3.9"), "LocationType")
	do pArr.SetAt(pRequest.GetValueAt("PV1:3.3"), "LocationName")

	// PraciontionerRole
	do pArr.SetAt(pRequest.GetValueAt("PV1:10"), "PractitionerRole.specialty") // Specialty

    // Episode Of Care
	do pArr.SetAt(pRequest.GetValueAt("EVN:2"), "EpisodeOfCareValue")
	
	// Encounter
	do pArr.SetAt(pRequest.GetValueAt("EVN:19"), "EncounterIdentifier")

	$$$TRACE("pArr Dumping: "_pArr.GetAt("NationalCode"))

	quit tsc
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
</Storage>
</Class>


<Class name="NCA.HTTPOut">
<Super>Ens.BusinessOperation</Super>
<TimeChanged>66457,55084.9302503</TimeChanged>
<TimeCreated>66443,34590.0890268</TimeCreated>

<Parameter name="ADAPTER">
<Default>EnsLib.HTTP.OutboundAdapter</Default>
</Parameter>

<Property name="Adapter">
<Type>EnsLib.HTTP.OutboundAdapter</Type>
</Property>

<Parameter name="INVOCATION">
<Default>Queue</Default>
</Parameter>

<Method name="SendFHIR">
<FormalSpec>pMsgIn:Ens.StreamContainer,*pResponse:Ens.Response</FormalSpec>
<Implementation><![CDATA[
	set tsc=$$$OK
	
	set strm=pMsgIn.Stream
	
	SET tHTTPReq=##class(%Net.HttpRequest).%New()	
	DO tHTTPReq.SetHeader("Content-Type","application/json")

	;SET ..Adapter.URL="http://hapi.fhir.org/baseR4"
	SET ..Adapter.URL="https://server.fire.ly"
	SET tHTTPReq.EntityBody=strm	
	
	SET tsc=..Adapter.SendFormDataArray(.tHttpResponse, "POST", tHTTPReq)
	
	#DIM tHttpResponse As %Net.HttpResponse
	
	set response=##class(NCA.HttpResponse).%New()

	set response.StatusCode= tHttpResponse.StatusCode
	set response.ResponseBody=tHttpResponse.Data.Read()
	
	set pResponse=response
	
	quit tsc
]]></Implementation>
</Method>

<XData name="MessageMap">
<Data><![CDATA[
<MapItems>
<MapItem MessageType="Ens.StreamContainer">
<Method>SendFHIR</Method>
</MapItem>
</MapItems>
]]></Data>
</XData>
</Class>


<Document name="EnsExportNotes.EnsExportProduction_2023-02-02 12-11-17_366+0.PTD"><ProjectTextDocument name="EnsExportNotes.EnsExportProduction_2023-02-02 12-11-17_366+0" description="Export Notes for export EnsExportProduction_2023-02-02 12-11-17_366+0">
<![CDATA[<Deployment>
<Creation>
<Machine>DESKTOP-0B5KC8A</Machine>
<Instance>IRISHEALTH</Instance>
<Namespace>USER</Namespace>
<SourceProduction>INFORMATION.NewProduction</SourceProduction>
<Username>Imtech</Username>
<UTC>2023-02-02 12:11:57.625</UTC>
</Creation>
<Notes>
</Notes>
<Contents>
<ExportProject>EnsExportProduction_2023-02-02 12-11-17_366+0</ExportProject>
<Item num="1">INFORMATION.NewProduction.CLS</Item>
<Item num="2">NCA.ConceptMapsTranslate.CLS</Item>
<Item num="3">NCA.HL7Dumper.CLS</Item>
<Item num="4">NCA.HTTPOut.CLS</Item>
</Contents>
<ProductionClassInExport>INFORMATION.NewProduction</ProductionClassInExport>
</Deployment>

]]></ProjectTextDocument>
</Document></Export>
